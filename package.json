{
  "name": "quickNav",
  "displayName": "QuickNav",
  "description": "Provides an organized set of keyboard shortcuts for text navigation",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.95.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./extension.js",
  "contributes": {
    "configuration": {
      "properties": {
        "quickNav.numberOfLinesToJump": {
          "type": "number",
          "default": 3,
          "description": "The number of lines the cursor will move up or down when `editor.action.jumpLinesUp` or `editor.action.jumpLinesDown` is called"
        }
      }
    },
    "commands": [
      {
        "command": "quickNav.helloWorld",
        "title": "Hello World"
      }
    ],
    "keybindings": [
      // |-----------------------------|
      // |        ⌘ + direction        |
      // |-----------------------------|
      // Move to the far end in each direction
      //   ⌘ Up
      // --------
      // Move to the Top of the document
      {
        "key": "ctrl+up",
        "mac": "cmd+up",
        "command": "cursorTop",
        "when": "textInputFocus"
      },
      {
        "key": "shift+ctrl+up",
        "mac": "shift+cmd+up",
        "command": "cursorTopSelect",
        "when": "textInputFocus"
      },
      //   ⌘ Down
      // ----------
      // Move to the Bottom of the document
      {
        "key": "ctrl+down",
        "mac": "cmd+down",
        "command": "cursorBottom",
        "when": "textInputFocus"
      },
      {
        "key": "shift+ctrl+down",
        "mac": "shift+cmd+down",
        "command": "cursorBottomSelect",
        "when": "textInputFocus"
      },
      //   ⌘ Left
      // ----------
      // Move Left to the Start of the Line
      {
        "key": "ctrl+left",
        "mac": "cmd+left",
        "command": "cursorHome",
        "when": "textInputFocus"
      },
      {
        "key": "shift+ctrl+left",
        "mac": "shift+cmd+left",
        "command": "cursorHomeSelect",
        "when": "textInputFocus"
      },
      //   ⌘ Right
      // -----------
      // Move Right to the End of the Line
      {
        "key": "ctrl+right",
        "mac": "cmd+right",
        "command": "cursorEnd",
        "when": "textInputFocus"
      },
      {
        "key": "shift+ctrl+right",
        "mac": "shift+cmd+right",
        "command": "cursorEndSelect",
        "when": "textInputFocus"
      },
      //   ⌘ Backspace
      // ---------------
      // Delete Left to the Start of the Line
      {
        "key": "ctrl+backspace",
        "mac": "cmd+backspace",
        "command": "deleteAllLeft",
        "when": "textInputFocus && !editorReadonly"
      },
      //   ⌘ Delete
      // ------------
      // Delete Right to the End of the Line
      {
        "key": "ctrl+delete",
        "mac": "cmd+delete",
        "command": "deleteAllRight",
        "when": "textInputFocus && !editorReadonly"
      },
      // |-----------------------------|
      // |        ⌥ + direction        |
      // |-----------------------------|
      // Move by whitespace
      //   ⌥ Up
      // --------
      // move to the prev blank line
      {
        "key": "alt+up",
        "command": "cursorMove",
        "args": {
          "to": "prevBlankLine"
        },
        "when": "editorTextFocus"
      },
      {
        "key": "shift+alt+up",
        "command": "cursorMove",
        "args": {
          "to": "prevBlankLine",
          "select": true
        },
        "when": "editorTextFocus"
      },
      //   ⌥ Down
      // ----------
      // move to the next blank line
      {
        "key": "alt+down",
        "command": "cursorMove",
        "args": {
          "to": "nextBlankLine"
        },
        "when": "editorTextFocus"
      },
      {
        "key": "shift+alt+down",
        "command": "cursorMove",
        "args": {
          "to": "nextBlankLine",
          "select": true
        },
        "when": "editorTextFocus"
      },
      //   ⌥ Left
      // ----------
      // Move One Whole Word to the Left
      {
        "key": "alt+left",
        "command": "cursorWordLeft",
        "when": "textInputFocus"
      },
      {
        "key": "shift+alt+left",
        "command": "cursorWordLeftSelect",
        "when": "textInputFocus"
      },
      //   ⌥ Right
      // -----------
      // Move One Whole Word to the Right
      {
        "key": "alt+right",
        "command": "cursorWordEndRight",
        "when": "textInputFocus"
      },
      {
        "key": "shift+alt+right",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus"
      },
      //   ⌥ Backspace
      // ---------------
      // Delete One Whole Word to the Left
      {
        "key": "alt+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
      },
      //   ⌥ Delete
      // ------------
      // Delete One Whole Word to the Right
      {
        "key": "alt+delete",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
      },
      // |---------------------------------|
      // |        ^ + ⌥ + direction        |
      // |---------------------------------|
      // These are exactly like the ⌥ keys,
      // but with a bit more "contol"...
      //   ^ ⌥ Left
      // ------------
      // MoveOneWordPART
      {
        "key": "win+alt+left",
        "mac": "ctrl+alt+left",
        "command": "cursorWordPartLeft",
        "when": "textInputFocus"
      },
      {
        "key": "win+shift+alt+left",
        "mac": "ctrl+shift+alt+left",
        "command": "cursorWordPartLeftSelect",
        "when": "textInputFocus"
      },
      //   ^ ⌥ Right
      // -------------
      // MoveOneWordPART
      {
        "key": "win+alt+right",
        "mac": "ctrl+alt+right",
        "command": "cursorWordPartRight",
        "when": "textInputFocus"
      },
      {
        "key": "win+shift+alt+right",
        "mac": "ctrl+shift+alt+right",
        "command": "cursorWordPartRightSelect",
        "when": "textInputFocus"
      },
      //   ^ ⌥ Backspace
      // -----------------
      // DeleteOneWordPART
      {
        "key": "win+alt+backspace",
        "mac": "ctrl+alt+backspace",
        "command": "deleteWordPartLeft",
        "when": "textInputFocus && !editorReadonly"
      },
      //   ^ ⌥ Delete
      // --------------
      // DeleteOneWordPART
      {
        "key": "win+alt+delete",
        "mac": "ctrl+alt+delete",
        "command": "deleteWordPartRight",
        "when": "textInputFocus && !editorReadonly"
      },
      //   ^ ⌥ Up
      // -------------
      // Move Up part of a Page
      {
        "key": "alt+win+up",
        "mac": "alt+ctrl+up",
        "command": "quickNav.jumpLinesUp",
        "when": "editorTextFocus"
      },
      {
        "key": "shift+alt+win+up",
        "mac": "shift+alt+ctrl+up",
        "command": "quickNav.jumpLinesUpSelect",
        "when": "editorTextFocus"
      },
      //   ^ ⌥ Down
      // -------------
      // Move Down part of a Page
      {
        "key": "alt+win+down",
        "mac": "alt+ctrl+down",
        "command": "quickNav.jumpLinesDown",
        "when": "editorTextFocus"
      },
      {
        "key": "shift+alt+win+down",
        "mac": "shift+alt+ctrl+down",
        "command": "quickNav.jumpLinesDownSelect",
        "when": "editorTextFocus"
      },
      // |-----------------------------|
      // |        ^ + direction        |
      // |-----------------------------|
      // Move content using the cursor
      //   ^ Up
      // --------
      // Move Line Above
      {
        "key": "win+up",
        "mac": "ctrl+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "win+shift+up",
        "mac": "ctrl+shift+up",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      //   ^ Down
      // ----------
      // Move Line Below
      {
        "key": "win+down",
        "mac": "ctrl+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "win+shift+down",
        "mac": "ctrl+shift+down",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      //   ^ Left
      // ----------
      // Move Caret Left
      {
        "key": "win+left",
        "mac": "ctrl+left",
        "command": "editor.action.moveCarretLeftAction",
        "when": "editorTextFocus && editorHasSelection"
      },
      {
        "key": "win+left",
        "mac": "ctrl+left",
        "command": "editor.action.transposeLettersLeft",
        "when": "textInputFocus && !editorHasSelection"
      },
      {
        // copy selection left

      },
      {
        // copy character left

      },


      //   ^ Right
      // -----------
      // Move Caret Right
      {
        "key": "win+right",
        "mac": "ctrl+right",
        "command": "editor.action.moveCarretRightAction",
        "when": "editorTextFocus && editorHasSelection"
      },
      {
        "key": "win+right",
        "mac": "ctrl+right",
        "command": "editor.action.transposeLetters",
        "when": "textInputFocus && !editorHasSelection"
      },
      // remove
      {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
      }
    ]
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.95.0",
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "eslint": "^8.57.0",
    "typescript": "^5.4.5",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0"
  }
}
